1. javascript有哪些类型，如何进行类型判断，如何准确的进行类型判断？ 
js中的数据基本类型为基本类型和引用类型 基本类型： String、Number、Boolean、Null、Undefined 引用类型： Array（数组）、Object（对象） 可以通过typeof ，instanceof进行类型判断（可以让他讲讲具体怎么用，听不懂讲啥 也没事- -，反正能说就行） 通过Object.prototype.toString.call来进行精准类型判断（初级的话，答不上也没事， 中高级要求能答上来，答不上扣5分吧） 解释下啥叫引用类型：赋值的其实是一个内存地址，而不是开辟一个栈空间来存值 


2. var、let、const的区别（答不上来的话，连初级都不够！直接out） var：没有块的概念，可以跨块访问，不能跨函数访问（存在变量提升，会上升到当前 作用域的最上端） let： 定义的变量只能在块作用域里访问，不能跨块访问，也不能跨函数访问 const： 定义常量（不能修改），使用时必须 初始化（就是要赋值，比如：const a = 5;可以，不能只写const a;）,只能在块级作用 域里访问 let在相同作用域内，不允许重复声明同一个变量 暂时性死区（加分项，初级就不用问啦！）： 在代码块内，使用let和const命令声明变 量之前，该变量都不可用 

React 

1. state发生变化，react会触发哪些生命周期(中高级一定要答上来哦！) shouldComponentUpdate => componentWillUpdate => render => componentDidUpdate ps： 如果回答的是 shouldComponentUpdate => render => getSnapshotBeforeUpdate => componentDidUpdate , 那差不多应该有高级，这是最 新的生命周期函数 

2. 如果一个react 组件key值改变了，会经历哪些生命周期函数（高级一定得答上来！！！） componentwillunmount => componentwillmount => render =>
componentDidMount ps: 如果他说是key值是state还是props，你就说是key值呀，react的key值，你就告诉我 经历哪些钩子函数吧，不用和他说到底是state还是props！！！ 3. 简单的介绍下redux的用法 store = createStore(reducer); state = store.getState store.dispatch store.subscribe ps： 如果他说的是connect，privoder，那他讲的应该是react-redux,不用管他说啥， 可以强调一波仅仅只使用redux，不用react-redux, 高级要求能答上来- -！ 

通用能力 
1. 如何进行前端代码调试？（不知道的话，那估计是刚培训出来的！！！） f12 打开调试工具进行debug断点调试 

2. 列举git的常用操作（这个不会，影响不大） git clone, git checkout , git status, git co